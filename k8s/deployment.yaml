kind: Service
apiVersion: v1
metadata:
  name: api
spec:
  clusterIP: None
  selector:
    app: api
  ports:
    - port: 8080
      targetPort: 8080

---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: api
# spec:
#   replicas: 3
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxUnavailable: 0
#   selector:
#     matchLabels:
#       app: api
#   template:
#     metadata:
#       labels:
#         app: api
#     spec:
#       containers:
#         - name: api
#           image: "registry.digitalocean.com/wdc-registry/key-value-app:latest"
#           imagePullPolicy: IfNotPresent
#           ports:
#             - containerPort: 8080
#           readinessProbe:
#             httpGet:
#               path: /status
#               port: 8080
#             initialDelaySeconds: 5
#             periodSeconds: 5
#             timeoutSeconds: 5
#             successThreshold: 1
#             failureThreshold: 3
#           livenessProbe:
#             exec:
#               command:
#                 - cat
#                 - /tmp/live
#           env:
#             - name: CONFIG_VERSION
#               value: "3"
#             - name: NODES
#               value: "3"
#             - name: PREVIOUS_NODES
#               value: "2"
#             - name: TESTING
#               value: "GsGgggJJ"
#             - name: FILE_PATH_PREFIX
#               value: "/data"

kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  serviceName: "api"
  replicas: 3
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: "registry.digitalocean.com/wdc-registry/key-value-app:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 1
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: CONFIG_VERSION
              value: "1"
            - name: NODES
              value: "3"
            - name: PREVIOUS_NODES
              value: "2"
            - name: TESTING
              value: "GGB!!B"
            - name: FILE_PATH_PREFIX
              value: "/data"
            - name: RABBIT_MQ_HOST
              value: "my-rabbitmq.default.svc.cluster.local"
            - name: RABBIT_MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-rabbitmq
                  key: rabbitmq-password

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: api-public
  labels:
    app: api-public
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: api
